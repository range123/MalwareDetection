import sys
from FeatureExtractor import FeaturesCalc
from scapy.all import *
from collections import defaultdict

import numpy as np
import pandas as pd
import pickle
if __name__ == '__main__':

    '''Preprocess the file'''
    path = sys.argv[1]

    malcalc = FeaturesCalc(flow_type='malware')
    res = []
    pkt_dict = defaultdict(list)
    data = []
    for pkt in rdpcap(path):
        if IP not in pkt:
            continue
        src,dst = pkt[IP].src,pkt[IP].dst
        if src<dst : flow_id = (src,dst)
        else : flow_id = (dst,src)
        pkt_dict[flow_id].append(pkt)
    for x in pkt_dict:
        res = [x[0],x[1]]
        res.extend(malcalc.compute_features(pkt_dict[x]))
        data.append(res)
    
    data_frame = pd.DataFrame(data)


    # Set Column names.
    data_frame.columns = ["IP1","IP2","Avg_syn_flag", "Avg_urg_flag", "Avg_fin_flag", "Avg_ack_flag", "Avg_psh_flag", "Avg_rst_flag", "Avg_DNS_pkt", "Avg_TCP_pkt",
        "Avg_UDP_pkt", "Avg_ICMP_pkt", "Duration_window_flow", "Avg_delta_time", "Min_delta_time", "Max_delta_time", "StDev_delta_time",
        "Avg_pkts_lenght", "Min_pkts_lenght", "Max_pkts_lenght", "StDev_pkts_lenght", "Avg_small_payload_pkt", "Avg_payload", "Min_payload",
        "Max_payload", "StDev_payload", "Avg_DNS_over_TCP", "Label"]
    
    data_frame['Duration_window_flow'] = pd.to_numeric(data_frame['Duration_window_flow'])

    X = np.array(data_frame.drop(columns=['IP1','IP2','Label'],axis=1))

    with open('./Models/classifier.pkl','rb') as f:
        clf = pickle.load(f)

    with open('./Models/scaler.pkl','rb') as f:
        scaler = pickle.load(f)
    X = scaler.transform(X)

    y = clf.predict(X)

    data_frame['malware'] = y


    with open('out.txt','w') as f:
        def out_func(row):
            if row['malware'] == 1:
                f.write('{} {} - Botnet activity detected in traffic'.format(row['IP1'],row['IP2']))
                f.write('\n')
        data_frame.apply(out_func,axis=1)



