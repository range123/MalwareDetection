import pandas as pd
import numpy as np

import os
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier 
from sklearn.metrics import precision_score, f1_score, accuracy_score, recall_score
import pickle

def store_model(filename,model):
    with open(filename,'wb') as f:
        pickle.dump(model,f)

if __name__ == '__main__':

    df = pd.read_csv('./botnet_train.csv')
    df.drop(columns=['IP1','IP2'],axis=1, inplace=True)
    X,y = df.drop(columns='Label',axis=1),df['Label']

    # cc = RandomUnderSampler()
    # X_resampled, y_resampled = cc.fit_resample(X, y)

    X_resampled, y_resampled = X,y

    X_train,X_test,y_train,y_test = train_test_split(X_resampled,y_resampled,test_size=0.25)
    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train,y_train)
    X_test = scaler.transform(X_test) 

    clf = RandomForestClassifier(n_estimators=500,n_jobs=-1)
    clf.fit(X_train,y_train)

    ''' Calculate Metrics '''

    y_pred = clf.predict(X_test)
    acc,prec,f1,rec = accuracy_score(y_test,y_pred),precision_score(y_test,y_pred),f1_score(y_test,y_pred),recall_score(y_test,y_pred)

    print(f'Accuracy = {acc} Precision = {acc} Recall = {rec} F1 score = {f1}')

    store_model(os.path.join('Models','classifier.pkl'),clf)
    store_model(os.path.join('Models','scaler.pkl'),scaler)

